:root {
  .theme-light {
    --Button-Text-Color: var(--Gray-Color-0);
    --Button-Shadow-Color: var(--Primary-Color-3);
    --Button-Outlined-Hover-Background-Color: var(--Gray-Color-1);
    --Button-Outlined-Active-Background-Color: var(--Gray-Color-2);
  }
  .theme-dark {
    --Button-Text-Color: var(--Gray-Color-100);
    --Button-Shadow-Color: var(--Primary-Color-6);
    --Button-Outlined-Hover-Background-Color: var(--Gray-Color-2);
    --Button-Outlined-Active-Background-Color: var(--Gray-Color-3);
  }
}

.ui-button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border: 0;
  border-color: transparent;
  outline: 0;
  cursor: pointer;

  &:focus {
    box-shadow: 0 0 5px var(--Button-Shadow-Color);
  }
  &:disabled {
    cursor: default;
  }

  &-icon {
    &.start {
      margin-right: 4px;
    }
    &.end {
      margin-left: 4px;
    }
  }

  // SIZE

  $button-height: (
    sm: 32px,
    md: 40px,
    lg: 48px,
  );

  $button-padding: (
    sm: 12px,
    md: 12px,
    lg: 16px,
  );

  $button-border-radius: (
    sm: $border-radius-sm,
    md: $border-radius-md,
    lg: $border-radius-lg,
  );

  $button-font: (
    sm: var(--Detail-Font-2),
    md: var(--Body-Font-3),
    lg: var(--Heading-Font-3),
  );

  @mixin SizeOfButton($size) {
    height: #{map-get($button-height, $size)};
    padding: 0 #{map-get($button-padding, $size)};
    border-radius: #{map-get($button-border-radius, $size)};
    font: #{map-get($button-font, $size)};
  }

  &.small {
    @include SizeOfButton('sm');
  }
  &.medium {
    @include SizeOfButton('md');
  }
  &.large {
    @include SizeOfButton('lg');
  }

  // STYLE
  $button-color: (
    outlined: (
      primary: var(--Primary-Color-6),
      secondary: var(--Primary-Color-6),
      tertiary: var(--Gray-Color-8),
    ),
    ghost: (
      primary: var(--Primary-Color-6),
      secondary: var(--Gray-Color-8),
    ),
  );
  $button-hover-bg-color: (
    outlined: (
      primary: var(--Primary-Color-1),
      secondary: var(--Button-Outlined-Hover-Background-Color),
      tertiary: var(--Button-Outlined-Hover-Background-Color),
    ),
    ghost: (
      primary: var(--Primary-Color-1),
      secondary: var(--Button-Outlined-Hover-Background-Color),
    ),
  );
  $button-active-bg-color: (
    outlined: (
      primary: var(--Primary-Color-2),
      secondary: var(--Button-Outlined-Active-Background-Color),
      tertiary: var(--Button-Outlined-Active-Background-Color),
    ),
    ghost: (
      primary: var(--Primary-Color-2),
      secondary: var(--Button-Outlined-Active-Background-Color),
    ),
  );
  $button-icon-color: (
    outlined: (
      primary: var(--Primary-Color-6),
      secondary: (
        --Primary-Color-6,
      ),
      tertiary: var(--Gray-Color-8),
    ),
    ghost: (
      primary: var(--Primary-Color-6),
      secondary: var(--Gray-Color-8),
    ),
  );

  @mixin styleOfButton($style, $variant) {
    color: map-get(map-get($button-color, $style), $variant);
    &:hover {
      background-color: map-get(map-get($button-hover-bg-color, $style), $variant);
    }
    &:active {
      background-color: map-get(map-get($button-active-bg-color, $style), $variant);
    }
    .ui-button-icon path {
      fill: map-get(map-get($button-icon-color, $style), $variant);
    }
  }

  $icon-button-bg: (
    primary: transparent,
    secondary: transparent,
    filled: var(--Primary-Color-6),
    outlined: transparent,
  );
  $icon-button-icon-color: (
    primary: var(--Primary-Color-6),
    secondary: var(--Gray-Color-8),
    filled: var(--Button-Text-Color),
    outlined: var(--Primary-Color-6),
  );
  $icon-button-hover-bg: (
    primary: var(--Primary-Color-1),
    secondary: var(--Button-Outlined-Hover-Background-Color),
    filled: var(--Primary-Color-7),
    outlined: var(--Button-Outlined-Hover-Background-Color),
  );
  $icon-button-active-bg: (
    primary: var(--Primary-Color-2),
    secondary: var(--Button-Outlined-Active-Background-Color),
    filled: var(--Primary-Color-8),
    outlined: var(--Button-Outlined-Active-Background-Color),
  );

  @mixin styleOfIconButton($variant) {
    background-color: map-get($icon-button-bg, $variant);
    &:hover {
      background-color: map-get($icon-button-hover-bg, $variant);
    }
    &:active {
      background-color: map-get($icon-button-active-bg, $variant);
    }
    path {
      fill: map-get($icon-button-icon-color, $variant);
    }
  }

  &.filled.primary {
    color: var(--Button-Text-Color);
    background-color: var(--Primary-Color-6);

    &:focus {
      box-shadow: 0 0 5px var(--Button-Shadow-Color);
    }
    &:hover {
      background-color: var(--Primary-Color-7);
    }
    &:active {
      background-color: var(--Primary-Color-8);
    }
    .ui-button-icon path {
      fill: var(--Button-Text-Color);
    }
    &:disabled {
      color: var(--Gray-Color-5);
      background-color: var(--Gray-Color-2);

      .ui-button-icon path {
        fill: var(--Gray-Color-5);
      }
    }
  }

  &.outlined {
    background-color: transparent;

    &.primary {
      @include styleOfButton('outlined', 'primary');
      border: 1px solid var(--Primary-Color-6);
    }
    &.secondary {
      @include styleOfButton('outlined', 'secondary');
      border: 1px solid var(--Gray-Color-4);
    }
    &.tertiary {
      @include styleOfButton('outlined', 'tertiary');
      border: 1px solid var(--Gray-Color-4);
    }
    &:disabled,
    &:is(:hover, :focus, :active):disabled {
      color: var(--Gray-Color-4);
      background-color: transparent;
      border-color: var(--Gray-Color-4);

      .ui-button-icon path {
        fill: var(--Gray-Color-4);
      }
    }
  }

  &.ghost {
    background-color: transparent;

    &.primary {
      @include styleOfButton('ghost', 'primary');
    }
    &.secondary {
      @include styleOfButton('ghost', 'secondary');
    }
    &:disabled,
    &:is(:hover, :focus, :active):disabled {
      color: var(--Gray-Color-4);
      background-color: transparent;

      .ui-button-icon path {
        fill: var(--Gray-Color-4);
      }
    }
  }

  &.icon {
    border-radius: 100px;
    aspect-ratio: 1/1;

    &.small {
      padding: 4px;
    }
    &.medium {
      padding: 4px;
      svg {
        width: 24px;
        height: 24px;
      }
    }
    &.large {
      padding: 8px;
      svg {
        width: 32px;
        height: 32px;
      }
    }

    &.primary {
      @include styleOfIconButton('primary');
    }
    &.secondary {
      @include styleOfIconButton('secondary');
    }
    &:is(.primary, .secondary):disabled,
    &:is(.primary, .secondary):is(:hover, :focus, :active):disabled {
      background-color: transparent;
      path {
        fill: var(--Gray-Color-4);
      }
    }
    &.filled {
      @include styleOfIconButton('filled');
      &:focus {
        box-shadow: 0 0 5px var(--Button-Shadow-Color);
      }
      &:disabled,
      &:is(:hover, :focus, :active):disabled {
        background-color: var(--Gray-Color-2);
        path {
          fill: var(--Gray-Color-5);
        }
      }
    }
    &.outlined {
      @include styleOfIconButton('outlined');
      border: 1px solid var(--Primary-Color-6);
      &:disabled,
      &:is(:hover, :focus, :active):disabled {
        background-color: transparent;
        border-color: var(--Gray-Color-4);
        path {
          fill: var(--Gray-Color-4);
        }
      }
    }
  }
}
